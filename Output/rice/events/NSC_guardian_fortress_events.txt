namespace = NSC_guardian_enigmatic_fortress

@vault_move_project_cooldown = 180

country_event = {
	# Triggered the player sucessfully completing the vanilla Enigmatic Fortress chain (getting the "fortress_solved" flag), allows for further study of the dead Fortress.
	# Unfortunately, this type of setup cannot be supported by an on_action call, thus no is_triggered_only setup is allowed.
	id = NSC_guardian_enigmatic_fortress.1
	hide_window = yes
	
	# "if" and "limit" are not required here
	trigger = {
		any_country = {
			has_country_flag = playable_guardian_feature_active
			has_country_flag = NSC_player_empire
			has_country_flag = fortress_solved #This flag is given to the player for successfully completing the vanilla event chain.
			NOT = { has_country_flag = guardian_fortress_defeated }
		}
	}
	
	immediate = {
		set_country_flag = guardian_fortress_defeated
		country_event = { id = NSC_guardian_enigmatic_fortress.2 }
		
		#The remaining coding is to make sure in multiplier if any players have Playable Guardians active yet didn't defeat the Enigmatic Fortress, get the oppertunity.
		if = {
			limit = {
				any_country = {
					has_country_flag = NSC_player_empire
					has_country_flag = playable_guardian_feature_active
					NOT = { has_country_flag = guardian_fortress_defeated }
				}
			}
			nsc_spawn_fortress = yes
		}
	}
}

country_event = {
	# Triggered by completion of first Enigmatic Fortress special project, gives the player the technologies to research the "jump drive" and more.
	id = NSC_guardian_enigmatic_fortress.2
	title = "guardian_fortress.2.name"
	desc = "guardian_fortress.2.desc"
	picture = "GFX_evt_enigmatic_fortress"
	show_sound = "event_sensor_ping"
	is_triggered_only = yes
	
	trigger = {
		has_country_flag = "NSC_player_empire"
		has_country_flag = "guardian_fortress_defeated"
	}
			
	option = {
		name = "guardian_fortress.2.a"
		trigger = {
			NOR = {
				has_country_flag = playable_guardians_postponed
				has_country_flag = captain_galleon_built
				has_country_flag = dreadnought_built
				has_country_flag = dimensional_horror_built
				has_country_flag = dragon_built
				has_country_flag = stellarite_built
				has_country_flag = technosphere_built
				has_country_flag = wraith_built
			}
		}
		hidden_effect = {
			country_event = { id = NSC_guardian_enigmatic_fortress.3 }
		}
	}	
	option = {
		name = "guardian_fortress.2.b"
		trigger = {
			NOR = {
				has_country_flag = playable_guardians_postponed
				has_country_flag = captain_galleon_built
				has_country_flag = dreadnought_built
				has_country_flag = dimensional_horror_built
				has_country_flag = dragon_built
				has_country_flag = stellarite_built
				has_country_flag = technosphere_built
				has_country_flag = wraith_built
			}
		}
		hidden_effect = {
			country_event = { id = NSC_guardian_main.2 }
		}
	}
	option = {
		name = "guardian_fortress.2.c"
		trigger = {
			OR = {
				has_country_flag = playable_guardians_postponed
				has_country_flag = captain_galleon_built
				has_country_flag = dreadnought_built
				has_country_flag = dimensional_horror_built
				has_country_flag = dragon_built
				has_country_flag = stellarite_built
				has_country_flag = technosphere_built
				has_country_flag = wraith_built
			}
		}
	}
}

country_event = {
	# This is the secondary trigger for getting the Enigmatic Fortress.
	id = NSC_guardian_enigmatic_fortress.3
	title = "guardian_fortress.3.name"
	desc = "guardian_fortress.3.desc"
	picture = "GFX_evt_enigmatic_fortress"
	show_sound = "event_sensor_ping"
	is_triggered_only = yes
	
	trigger = {
		has_country_flag = NSC_player_empire
		has_country_flag = guardian_fortress_defeated
	}
	
	option = { 
		name = "guardian_fortress.3.a"
		enable_special_project = {
			name = guardian_fortress_project
			location = capital_scope
			owner = root
		}
	}
	option = {
		name = "guardian_backout.1.a"
		custom_tooltip = "NSC_guardian_main_tooltip"
		hidden_effect = {
			country_event = { id = NSC_guardian_main.2 }
		}
	}
}

country_event = {
	# This adds the Enigmatic Fortress Built country flag.
	id = NSC_guardian_enigmatic_fortress.4
	hide_window = yes

	trigger = {
		OR = {
			is_country_type = "default"
			#Compatibility with mod: Zenith of Fallen Empires
			is_country_type = ascended_empire
			is_country_type = lost_empire
			is_country_type = ascended_hive_mind
		}
		is_ai = no
		NOT = { 
			has_country_flag = "guardian_moving_fortress"
			has_country_flag = "enigmatic_fortress_built"
		}
		count_owned_ships = {
			limit = { is_ship_size = NSC_enigmatic_fortress }
			count = 1
		}
	}
	immediate = {
		set_country_flag = "enigmatic_fortress_built"
		country_event = { id = NSC_guardian_enigmatic_fortress.5 }
	}
}

country_event = {
	# Enigmatic Fortress built message.
	id = NSC_guardian_enigmatic_fortress.5
	title = "guardian_fortress.4.name"
	desc = "guardian_fortress.4.desc"
	picture = "GFX_evt_enigmatic_fortress"
	show_sound = "event_sensor_ping"
	is_triggered_only = yes
	option = { name = EXCELLENT }
}

country_event = {
	# Checks if the Enigmatic Fortress has died or has been disbanded.
	id = NSC_guardian_enigmatic_fortress.6
	hide_window = yes

	trigger = {
		NOT = { has_country_flag = "guardian_moving_fortress" }
		has_country_flag = "enigmatic_fortress_built"
		OR = {
			is_country_type = "default"
			#Compatibility with mod: Zenith of Fallen Empires
			is_country_type = ascended_empire
			is_country_type = lost_empire
			is_country_type = ascended_hive_mind
		}
		is_ai = no
		count_owned_ships = {
			limit = { is_ship_size = NSC_enigmatic_fortress }
			count = 0
		}
	}
	immediate = {
		remove_country_flag = "enigmatic_fortress_built"
		country_event = { id = NSC_guardian_enigmatic_fortress.7 }
	}
}

country_event = {
	# Enigmatic Fortress destroyed, disbanded, or abandoned message.
	id = NSC_guardian_enigmatic_fortress.7
	title = "guardian_fortress.5.name"
	desc = "guardian_fortress.5.desc"
	picture = "GFX_evt_exploding_ship"
	show_sound = "event_sensor_ping"
	is_triggered_only = yes
	option = {
		name = UNDERSTOOD
		trigger = {
			OR = {
				has_country_flag = playable_guardians_postponed
				has_country_flag = captain_galleon_built
				has_country_flag = dragon_built
				has_country_flag = dimensional_horror_built
				has_country_flag = dreadnought_built
				has_country_flag = stellarite_built
				has_country_flag = technosphere_built
				has_country_flag = wraith_built
			}
		}
	}
	option = {
		name = UNDERSTOOD
		custom_tooltip = "NSC_guardian_main_tooltip"
		trigger = {
			NOR = {
				has_country_flag = playable_guardians_postponed
				has_country_flag = captain_galleon_built
				has_country_flag = dragon_built
				has_country_flag = dimensional_horror_built
				has_country_flag = dreadnought_built
				has_country_flag = stellarite_built
				has_country_flag = technosphere_built
				has_country_flag = wraith_built
			}
		}
		hidden_effect = {
			country_event = { id = NSC_guardian_main.2 }
		}
	}
}

country_event = {
	# Event 1 of "move fortress" chain; removes first Enigmatic Fortress for jump.
	id = NSC_guardian_enigmatic_fortress.8
	is_triggered_only = yes
	hide_window = yes
	trigger = {
		OR = {
			is_country_type = "default"
			#Compatibility with mod: Zenith of Fallen Empires
			is_country_type = ascended_empire
			is_country_type = lost_empire
			is_country_type = ascended_hive_mind
		}
		is_ai = no
		any_owned_ship = {
			is_ship_size = NSC_enigmatic_fortress
		}
	}
	immediate = {
		every_owned_fleet = {
			limit = { is_ship_size = NSC_enigmatic_fortress }
			delete_fleet = this
		}
		fromfrom = {
			save_event_target_as = guardian_fortress_location
		}
		country_event = { id = NSC_guardian_enigmatic_fortress.9 days = 1 }
	}
}

country_event = {
	# Event 2 in "move fortress" chain; creates new Enigmatic Fortress in orbit of targeted planet.
	id = NSC_guardian_enigmatic_fortress.9
	is_triggered_only = yes
	hide_window = yes
	trigger = {
		OR = {
			is_country_type = "default"
			#Compatibility with mod: Zenith of Fallen Empires
			is_country_type = ascended_empire
			is_country_type = lost_empire
			is_country_type = ascended_hive_mind
		}
		is_ai = no
	}
	immediate = {
		create_fleet = {
			name = "NAME_Enigmatic_Fortress"
			settings = {
				is_boss = yes
				spawn_debris = no
			}
			effect = {
				set_owner = prev
				create_ship = {
					name = random
					design = "NAME_Enigmatic_Fortress"
				}
				set_location = {
					target = event_target:guardian_fortress_location
					distance = 30 #Needs larger distance value due to size
					angle = random
				}
			}
		}
		remove_country_flag = "guardian_moving_fortress"
		set_timed_country_flag = {
			flag = "guardian_fortress_move_cooldown"
			days = @vault_move_project_cooldown
		}
	}
}

ship_event = {
	# Triggers when Enigmatic Fortress is abandoned due to boarder change.
	id = NSC_guardian_enigmatic_fortress.10
	is_triggered_only = yes
	hide_window = yes
	trigger = {
		is_ship_size = NSC_enigmatic_fortress
		owner = {
			OR = {
				is_country_type = "default"
				#Compatibility with mod: Zenith of Fallen Empires
				is_country_type = ascended_empire
				is_country_type = lost_empire
				is_country_type = ascended_hive_mind
			}
			is_ai = no
		}
	}
	immediate = {
		fleet = { delete_fleet = this }
		#owner = {} - Since it should be the only one, a trigger to get to the "death" message shouldn't be required.
	}
}

country_event = {
	# Spawns in Dimensional Horror around Capital Planet.
	id = NSC_guardian_enigmatic_fortress.11
	is_triggered_only = yes
	hide_window = yes
	
	trigger = {
		has_country_flag = "NSC_player_empire"
		has_country_flag = playable_guardian_feature_active
	}
	
	#trigger = {
	#	has_country_flag = "NSC_player_empire"
	#	has_country_flag = "guardian_fortress_defeated"
	#}

	immediate = {
		create_fleet = {
			name = "NAME_Enigmatic_Fortress"
			settings = {
				is_boss = yes
				spawn_debris = no
			}
			effect = {
				set_owner = root
				create_ship = {
					name = random
					design = "NAME_Enigmatic_Fortress"
				}
				 set_location = {
				 	target = root.capital_scope
				 	distance = 30 #Needs larger distance value due to size
				 	angle = random
				 }
			}
		}
	}
}